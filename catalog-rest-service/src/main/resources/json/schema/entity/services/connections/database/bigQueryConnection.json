{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/bigQueryConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "BigQueryConnection",
  "description": "Google BigQuery Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.catalog.services.connections.database.BigQueryConnection",
  "definitions": {
    "bigqueryType": {
      "description": "Service type.",
      "type": "string",
      "enum": ["BigQuery"],
      "default": "BigQuery"
    },
    "bigqueryScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": ["bigquery"],
      "default": "bigquery"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/bigqueryType",
      "default": "BigQuery"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/bigqueryScheme",
      "default": "bigquery"
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "BigQuery APIs URL.",
      "type": "string",
      "default": "bigquery.googleapis.com"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Bigquery. This user should have privileges to read all the metadata in Bigquery.",
      "type": "string"
    },
    "projectId": {
      "title": "Project ID",
      "description": "BigQuery project ID. Only required if using credentials path instead of values.",
      "type": "string"
    },
    "credentials": {
      "title": "GCS Credentials",
      "description": "GCS Credentials",
      "$ref": "../../../../security/credentials/gcsCredentials.json"
    },
    "enablePolicyTagImport": {
      "title": "Enable Policy Tag Import",
      "description": "Enable importing policy tags of BigQuery into OpenMetadata",
      "type": "boolean",
      "default": true
    },
    "tagCategoryName": {
      "title": "Tag Category Name",
      "description": "OpenMetadata Tag category name if enablePolicyTagImport is set to true.",
      "type": "string",
      "default": "BigqueryPolicyTags"
    },
    "database": {
      "title": "Database",
      "description": "Database of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single database. When left blank, OpenMetadata Ingestion attempts to scan all the databases.",
      "type": "string"
    },
    "partitionQueryDuration": {
      "title": "Partition Query Duration",
      "description": "Duration for partitioning BigQuery tables.",
      "type": "integer",
      "default": 1
    },
    "partitionQuery": {
      "title": "Partition Query",
      "description": "Partitioning query for BigQuery tables.",
      "type": "string",
      "default": "select * from {}.{} WHERE {} = \"{}\" LIMIT 1000"
    },
    "partitionField": {
      "title": "Partition Field",
      "description": "Column name on which the BigQuery table will be partitioned.",
      "type": "string",
      "default": "_PARTITIONTIME"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsUsageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsUsageExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    }
  },
  "additionalProperties": false,
  "required": ["credentials"]
}
